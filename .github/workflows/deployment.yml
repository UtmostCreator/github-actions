name: Deploying Project

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

# each job is executed on a different VM/machine so job-1 doesnt have access to job-2 or visa-versa
jobs:
  test-code-and-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # ðŸ”¥ Required for local actions to be accessible!
      - name: Setup Project
        uses: ./.github/actions/setup-node-project
      - name: Run Lint
        run: npm run lint
      - name: Run Tests
        run: npm test

  build:
    needs: test-code-and-formatting
    runs-on: ubuntu-latest
    # results of this job using outputs:
    outputs: 
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # ðŸ”¥ Required again!
      - name: Setup Project
        uses: ./.github/actions/setup-node-project
      - name: Build Project
        run: npm run build
      - name: Publish JS file name from build
        id: publish  # used in $ {{ steps }} - mandatory
        # alternative syntax to 'script-file={}' is '::set-ouput name=script-file::{}'
        run: |
          echo "script-file=$(find dist/assets/*.js -type f)" >> "$GITHUB_OUTPUT" 
        # finds and prints JS file's name e.g. output example: "./index.e16c65c9.js"
        # ';': Mandatory terminator for the -execdir clause. It tells find where the command ends.
        # $GITHUB_OUTPUT - managed by github
      # working with artifacts
      - name: Upload artificats
        uses: actions/upload-artifact@v4
        with:
          name: dist-files # uploading
          path: |
            dist
            package.json
# package.json added just as an example
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files # downloading
      - name: Output contents
        run: ls -la
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deployment process is in progress..."
